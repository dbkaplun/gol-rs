var searchIndex = {};
searchIndex['gol'] = {"items":[[0,"","gol","Experimental Rust library for implementing Conway's Game of Life",null,null],[0,"plaintext","","Module for parsing the [PlainText](http://conwaylife.com/wiki/PlainText) Game of Life\nfile format into a `Grid`.",null,null],[3,"PlainText","gol::plaintext","Struct for the contents of a PlainText format Game of Life file.",null,null],[12,"name","","",0,null],[12,"comment","","",0,null],[12,"data","","",0,null],[4,"ParseError","","Represents any errors which occur during the PlainText parsing process",null,null],[13,"Io","","",1,null],[13,"NameLineMissing","","",1,null],[13,"Invalid","","",1,null],[5,"parse_plaintext","","Parses the [PlainText](http://conwaylife.com/wiki/PlainText) format from a buffered stream",null,{"inputs":[{"name":"r"}],"output":{"name":"parseresult"}}],[6,"ParseResult","","Represents the result of a PlainText parse operation",null,null],[11,"fmt","","",1,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",1,{"inputs":[{"name":"parseerror"},{"name":"error"}],"output":{"name":"parseerror"}}],[0,"rules","gol","Module containing functions implementing Game of Life rulesets.",null,null],[5,"standard_rules","gol::rules","Implements the [standard rules](https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life#Rules)\nof the Game of Life.",null,{"inputs":[{"name":"cell"},{"name":"usize"}],"output":{"name":"cell"}}],[6,"RulesFn","","Describes a static ruleset function.",null,null],[0,"world","gol","Structures and functions used for constructing a Game of Live `World` which combines a `Grid` and a rule set.",null,null],[3,"World","gol::world","Provides hosting for a basic Game of Life simulation. Includes functions for modifying\nthe world and stepping the simulation both immutably and in-place.",null,null],[11,"new","","Constructs a new `World` with the given `Grid`",2,{"inputs":[{"name":"world"},{"name":"grid"}],"output":{"name":"world"}}],[11,"new_with_rules","","Constructs a new `World` with the given `Grid` and `RulesFn`",2,{"inputs":[{"name":"world"},{"name":"grid"},{"name":"rulesfn"}],"output":{"name":"world"}}],[11,"generation","","Gets the current generation for this `World`",2,{"inputs":[{"name":"world"}],"output":{"name":"i64"}}],[11,"width","","Gets the width of this `World`",2,{"inputs":[{"name":"world"}],"output":{"name":"usize"}}],[11,"height","","Gets the height of this `World`",2,{"inputs":[{"name":"world"}],"output":{"name":"usize"}}],[11,"step_mut","","Executes a single step of this `World` in place",2,{"inputs":[{"name":"world"}],"output":null}],[11,"step","","Executes a single step of this `World` and returns a new, modified world",2,{"inputs":[{"name":"world"}],"output":{"name":"world"}}],[11,"write_cells","","Overwrite the cells starting at coords `(x, y)` with the data in the given `Grid`",2,{"inputs":[{"name":"world"},{"name":"usize"},{"name":"usize"},{"name":"grid"}],"output":null}],[11,"iter_rows","","Returns an iterator over rows in this world",2,{"inputs":[{"name":"world"}],"output":{"name":"rowiter"}}],[0,"grid","gol","The grid module provides `Grid` for working with a \"torus world\" grid of cells.",null,null],[3,"Grid","gol::grid","An addressable grid of `Cell`s",null,null],[3,"RowIter","","Iterator for the rows in a `Grid`",null,null],[3,"CellIter","","Iterator for the cells in a `Grid`",null,null],[4,"Cell","","Represents a single Cell, alive or dead",null,null],[13,"Live","","",3,null],[13,"Dead","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",3,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"is_live","","",3,{"inputs":[{"name":"cell"}],"output":{"name":"bool"}}],[11,"is_dead","","",3,{"inputs":[{"name":"cell"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"grid"}],"output":{"name":"grid"}}],[11,"eq","","",4,{"inputs":[{"name":"grid"},{"name":"grid"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"grid"},{"name":"grid"}],"output":{"name":"bool"}}],[11,"from_raw","","Constructs a Grid from raw components",4,{"inputs":[{"name":"grid"},{"name":"usize"},{"name":"usize"},{"name":"vec"}],"output":{"name":"grid"}}],[11,"from_fn","","Constructs a Grid of `width` and `height` using a factory function.",4,{"inputs":[{"name":"grid"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"grid"}}],[11,"create_dead","","Constructs a dead grid of `width` and `height`",4,{"inputs":[{"name":"grid"},{"name":"usize"},{"name":"usize"}],"output":{"name":"grid"}}],[11,"width","","Gets the width of this `Grid`",4,{"inputs":[{"name":"grid"}],"output":{"name":"usize"}}],[11,"height","","Gets the height of this `Grid`",4,{"inputs":[{"name":"grid"}],"output":{"name":"usize"}}],[11,"cell_at","","Returns a reference to the `Cell` at the given coordinates",4,{"inputs":[{"name":"grid"},{"name":"usize"},{"name":"usize"}],"output":{"name":"cell"}}],[11,"set_cell","","Overwrites the `Cell` at the given coordinates with the given value",4,{"inputs":[{"name":"grid"},{"name":"usize"},{"name":"usize"},{"name":"cell"}],"output":null}],[11,"write_cells","","Overwrite the cells starting at coords `(x, y)` with the data in the given `Grid`",4,{"inputs":[{"name":"grid"},{"name":"usize"},{"name":"usize"},{"name":"grid"}],"output":null}],[11,"count_neighbours","","Count the number of neighbors the `Cell` at the given\ncoordinates has.",4,{"inputs":[{"name":"grid"},{"name":"usize"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"iter_rows","","Returns an iterator over rows in this `Grid`",4,{"inputs":[{"name":"grid"}],"output":{"name":"rowiter"}}],[11,"iter_cells","","Returns an iterator over `Cell`s in this `Grid`",4,{"inputs":[{"name":"grid"}],"output":{"name":"celliter"}}],[11,"fmt","","",4,{"inputs":[{"name":"grid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",5,{"inputs":[{"name":"rowiter"}],"output":{"name":"option"}}],[11,"next","","",6,{"inputs":[{"name":"celliter"}],"output":{"name":"option"}}]],"paths":[[3,"PlainText"],[4,"ParseError"],[3,"World"],[4,"Cell"],[3,"Grid"],[3,"RowIter"],[3,"CellIter"]]};
initSearch(searchIndex);
