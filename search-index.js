var searchIndex = {};
searchIndex['gol'] = {"items":[[0,"","gol","",null,null],[3,"Grid","","An addressable grid of `Cell`s",null,null],[3,"World","","Represents a Game of Life Grid + generation",null,null],[3,"RowIterator","","Iterator for the rows in a `Grid`",null,null],[4,"Cell","","Represents a single Cell, alive or dead",null,null],[13,"Live","","",0,null],[13,"Dead","","",0,null],[0,"plaintext","","",null,null],[3,"PlainText","gol::plaintext","Struct for the contents of a [Plaintext](http://conwaylife.com/wiki/Plaintext) format Game of Life file.",null,null],[12,"name","","",1,null],[12,"comment","","",1,null],[12,"data","","",1,null],[3,"Padding","","Describes padding in the order `top`, `right`, `bottom`, `left`",null,null],[12,"top","","",2,null],[12,"right","","",2,null],[12,"bottom","","",2,null],[12,"left","","",2,null],[4,"Error","","Represents any errors which occur during the Plaintext parsing process",null,null],[13,"Io","","",3,null],[13,"NameLineMissing","","",3,null],[13,"Invalid","","",3,null],[5,"parse_plaintext","","Parses the [Plaintext](http://conwaylife.com/wiki/Plaintext) format from a buffered stream",null,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[6,"ParseResult","","Represents the result of a Plaintext parse operation",null,null],[11,"fmt","","",2,{"inputs":[{"name":"padding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"padding"},{"name":"padding"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"padding"},{"name":"padding"}],"output":{"name":"bool"}}],[11,"new","","Constructs a new instance of the Padding struct",2,{"inputs":[{"name":"padding"},{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"padding"}}],[6,"Err","","",null,null],[11,"from_str","","Parses a css-style `top[,right[,bottom[,left]]]` expression\ninto a Padding struct",2,{"inputs":[{"name":"padding"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",3,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","","",3,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","gol","",0,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",0,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"is_live","","",0,{"inputs":[{"name":"cell"}],"output":{"name":"bool"}}],[11,"is_dead","","",0,{"inputs":[{"name":"cell"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"grid"}],"output":{"name":"grid"}}],[11,"eq","","",4,{"inputs":[{"name":"grid"},{"name":"grid"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"grid"},{"name":"grid"}],"output":{"name":"bool"}}],[11,"from_raw","","Constructs a Grid from raw components",4,{"inputs":[{"name":"grid"},{"name":"usize"},{"name":"usize"},{"name":"vec"}],"output":{"name":"grid"}}],[11,"from_fn","","Constructs a Grid of `width` and `height` using a factory function.",4,{"inputs":[{"name":"grid"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"grid"}}],[11,"create_dead","","Constructs a dead grid of `width` and `height`",4,{"inputs":[{"name":"grid"},{"name":"usize"},{"name":"usize"}],"output":{"name":"grid"}}],[11,"create_random","","Constructs a random grid of `width` and `height`",4,{"inputs":[{"name":"grid"},{"name":"r"},{"name":"usize"},{"name":"usize"}],"output":{"name":"grid"}}],[11,"iter_rows","","Returns an iterator over rows in this `Grid`",4,{"inputs":[{"name":"grid"}],"output":{"name":"rowiterator"}}],[11,"cell_at","","Returns a reference to the `Cell` at the given coordinates",4,{"inputs":[{"name":"grid"},{"name":"usize"},{"name":"usize"}],"output":{"name":"cell"}}],[11,"set_cell","","Overwrites the `Cell` at the given coordinates with the given value",4,{"inputs":[{"name":"grid"},{"name":"usize"},{"name":"usize"},{"name":"cell"}],"output":null}],[11,"fmt","","",4,{"inputs":[{"name":"grid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `World` with the given `Grid`",5,{"inputs":[{"name":"world"},{"name":"grid"}],"output":{"name":"world"}}],[11,"generation","","Gets the current generation for this `World`",5,{"inputs":[{"name":"world"}],"output":{"name":"i64"}}],[11,"width","","Gets the width of this `World`",5,{"inputs":[{"name":"world"}],"output":{"name":"usize"}}],[11,"height","","Gets the height of this `World`",5,{"inputs":[{"name":"world"}],"output":{"name":"usize"}}],[11,"step_mut","","Executes a single step of this `World` in place",5,{"inputs":[{"name":"world"}],"output":null}],[11,"step","","Executes a single step of this `World`, and returns a new world",5,{"inputs":[{"name":"world"}],"output":{"name":"world"}}],[11,"write_cells","","Overwrite the cells starting at coords `(x, y)` with the data in the given `Grid`",5,{"inputs":[{"name":"world"},{"name":"usize"},{"name":"usize"},{"name":"grid"}],"output":null}],[11,"iter_rows","","Returns an iterator over rows in this world",5,{"inputs":[{"name":"world"}],"output":{"name":"rowiterator"}}],[6,"Item","","",null,null],[11,"next","","",6,{"inputs":[{"name":"rowiterator"}],"output":{"name":"option"}}]],"paths":[[4,"Cell"],[3,"PlainText"],[3,"Padding"],[4,"Error"],[3,"Grid"],[3,"World"],[3,"RowIterator"]]};
initSearch(searchIndex);
